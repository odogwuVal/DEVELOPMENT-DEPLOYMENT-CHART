{{- if .Values.ingress.enabled -}}
{{- $fullName := include "base-chart.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "base-chart.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: alb
    external-dns.alpha.kubernetes.io/hostname: "{{ $.Values.hostNamePrefix }}.{{ $.Values.ingress.host }}"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    {{- if eq $.Values.alb.development "dev" }}
    alb.ingress.kubernetes.io/group.name: 'dev'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600
    {{- else }}
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600,access_logs.s3.enabled=true,access_logs.s3.bucket=log-ogtl-access-alb
    alb.ingress.kubernetes.io/group.name: 'prod'
    {{- end }}
    {{- if eq $.Values.alb.development "dev" }}
    alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:us-east-1:651611223190:certificate/16b08c07-e93a-43f2-a88c-6000abb1f40c'
    {{- else }}
    alb.ingress.kubernetes.io/certificate-arn: {{ $.Values.alb.certarn }}
    {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    - host: {{ $.Values.hostNamePrefix }}.{{ $.Values.ingress.host }}
      http:
        paths:
          {{- if $.Values.ingress.pathBased }}
          {{- toYaml .Values.paths | nindent 10 }}
          {{- end }}
          - path: {{ $.Values.ingress.path | quote }}
            {{- if and $.Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ $.Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
    {{- if .Values.secondHost }}
    - host: {{ $.Values.secondHostNamePrefix }}.{{ $.Values.ingress.host }}
      http:
        paths:
          - path: {{ $.Values.ingress.path | quote }}
            {{- if and $.Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ $.Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
    {{- end }}
{{- end }}